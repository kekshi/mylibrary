apply plugin: 'com.android.library'
def config = rootProject.ext.android
def librarys = rootProject.ext.dependencies
android {
    compileSdkVersion config.compileSdkVersion



    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    api librarys.constraint
    api librarys.supportV7
    api librarys.kotlin
    api project(':qrcodelibrary')

    // Retrofit
    api "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    api "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    api "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    api "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttploggingVersion"
    api "com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion"

    // RxBinging
    api "com.jakewharton.rxbinding2:rxbinding-appcompat-v7:$rootProject.rxbindingVersion"

    // Glide
    api "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.glideVersion"
    implementation "com.github.CymChad:BaseRecyclerViewAdapterHelper:$rootProject.ext.BaseRecyclerViewAdapterHelperVersion"
}
